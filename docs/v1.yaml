openapi: 3.0.0
servers:
  - url: http://localhost:3001/api/v1
    description: local server
  - url: https://event-sync-2rdc.onrender.com/api/v1/doc/
    description: prod

info:
  title: Event Sync API
  description: API for an event management, booking and ticketing system
  version: 1.0.0


paths:
  # ===================== AUTH =============

  /auth/register:
    post:
      security: []
      tags: [auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
                password:
                  type: string
      responses:
        201:
          $ref: '#/components/schemas/DefaultSuccess'
  /auth/login:
    post:
      security: []
      tags: [auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: 'Success Response'
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  accessToken:
                    type: string
    /auth/login:
    post:
      security: []
      tags: [auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accessToken:
                  type: string
      responses:
        200:
          description: 'Success Response'
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  accessToken:
                    type: string
  /auth/verify-account:
    post:
      security: []
      tags: [auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                code:
                  type: number
      responses:
        201:
          $ref: '#/components/schemas/DefaultSuccess'
  /auth/forgot-password:
    post:
      security: []
      tags: [auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        200:
          $ref: '#/components/schemas/DefaultSuccess'
  /auth/reset-password:
    put:
      security: []
      tags: [auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                token:
                  type: string
                code:
                  type: number
      responses:
        200:
          $ref: '#/components/schemas/DefaultSuccess'
  

  # ===================== USER =============
  /user:
    get:
      tags: [user]
      security:
        - bearer: []
      responses:
        200:
          description: "Success Response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
    put:
      tags: [user]
      security:
        - bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
      responses:
        200:
          $ref: "#/components/schemas/DefaultSuccess"

  /user/profile-picture:
    put:
      tags: [user]
      security:
        - bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                profilePicture:
                  type: string
                  example: "base64"
      responses:
        200:
          $ref: "#/components/schemas/DefaultSuccess"


  # ===================== EVENT CATEGORY =============
  /event/category:
    post:
      tags: ["event category"]
      security:
        - bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name: string
                description: string
      responses:
        201: 
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
    get:
      tags: ["event category"]
      security: []
      responses:
        200: 
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Category"
  /event/category/{id}:
    parameters:
      - in: path
        required: true
        name: id
        schema:
          type: number
    put:
      tags: ["event category"]
      security:
        - bearer: []
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              type: object
              properties:
                name: 
                  type: string
                description:
                  type: string
      responses:
        200:
          $ref: "#/components/schemas/DefaultSuccess"
    get:
      tags: ["event category"]
      security: []
      responses:
        200:
          description: success response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
    delete:
      tags: ["event category"]
      security:
        - bearer: []
      responses:
        200:
          $ref: "#/components/schemas/DefaultSuccess"


  # ===================== EVENT =============
  /event:
    post:
      tags: [event]
      security:
        - bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                startDate:
                  type: date
                endDate:
                  type: date
                startTime:
                  type: date
                endTime:
                  type: data
                addressLine1:
                  type: string
                addressLine2:
                  type: string
                city:
                  type: string
                state:
                  type: string
                country:
                  type: string
                ticketPurchaseDeadline:
                  type: date
                userId:
                  type: number
                categories:
                  type: array
                  items:
                    type: number
                gallery:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      type:
                        type: string
                      url:  
                        type: string
                        example: "base64"
      responses:
        201:
          description: success response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"    
    get:
      tags: [event]
      security: []
      responses:
        200:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Event"
  /event/user:
    get:
      tags: [event]
      security: 
        - bearer: []
      responses:
        200:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Event"

  /event/{id}:
    parameters:
      - in: path
        required: true
        schema:
          type: number
        name: id
    get:
      tags: [event]
      security: []
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
    delete:
      tags: [event]
      security: 
        - bearer: []
      responses:
        200:
          $ref: "#/components/schemas/DefaultSuccess"

    put:
      tags: [event]
      security:
        - bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                startDate:
                  type: date
                endDate:
                  type: date
                startTime:
                  type: date
                endTime:
                  type: data
                addressLine1:
                  type: string
                addressLine2:
                  type: string
                city:
                  type: string
                state:
                  type: string
                country:
                  type: string
                ticketPurchaseDeadline:
                  type: date
      responses:
        200:
          $ref: "#/components/schemas/DefaultSuccess"
  /event/{id}/profit:
    parameters:
      - in: path
        required: true
        schema:
          type: number
        name: id
    get:
      tags: [event]
      security:
        - bearer: []
      responses:
        200:
          description: success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  profit: 
                    type: number
 
 
 
  # ===================== TICKET =============
  /ticket/event/{id}:
    parameters:
      - in: path
        required: true
        schema:
          type: number
        name: id
    post:
      description: create tickets
      tags: [ticket]
      security:
        - bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                  description:
                    type: string
                  totalNumber:
                    type: number
                  price:  
                    type: number
      responses:
        200:
          description: success response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Ticket"
    get:
      description: get tickets
      tags: [ticket]
      security: []
      responses:
        200:
          description: success response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Ticket"
  /ticket/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: number
        required: true
    put:
      tags: [ticket]
      security:
        - bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                description:
                  type: string
                totalNumber:
                  type: number
                price:
                  type: number
      responses:
        200:
          $ref: "#/components/schemas/DefaultSuccess"      
    delete:
      tags: [ticket]
      security:
        - bearer: []
      responses:
        200:
          $ref: "#/components/schemas/DefaultSuccess"   
    get:
      tags: [ticket]
      security:
        - bearer: []
      responses:
        200:
          description: success response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ticket"   
  /ticket/event/{id}/stats:
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: number
      tags: [ticket]
      security:
        - bearer: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalSold:
                    type: number
                  totalNumber:
                    type: number
  /ticket/event/{id}/profit:
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: number
      tags: [ticket]
      security:
        - bearer: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    ticketsCount: 
                      type: number
                    user:
                      $ref: "#/components/schemas/User"
  
  

  # ================ PAYMENT ============
  /payment/purchase/ticket/{id}:
    parameters:
      - in: path
        required: true
        name: id
        schema:
          type: number
    post:
      tags: [payment]
      security:
        - bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ticketsCount:
                  type: number
      responses:
        200:
          description: success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  checkout_url:
                    type: string
  /payment/banks:
    get:
      tags: [payment]
      security:
        - bearer: []
      parameters:
        - in: query
          name: search
          required: true
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Bank"

  # ================ WALLET ==========
  /wallet:
    get:
      tags: [wallet]
      security:
        - bearer: []
      responses:
        200:
          description: get user wallet
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Wallet"

components:
  schemas:
    # defaults
    DefaultSuccess:
      description: 'Success Response'
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
    DefaultError:
      description: 'Error Response'
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string

    User:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        id:
          type: number
        email:
          type: string

    Category:
      type: object
      properties:
        id: 
          type: number
        name:
          type: string
        description:
          type: string

    Event:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        startDate:
          type: date
        endDate:
          type: date
        startTime:
          type: date
        endTime:
          type: data
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
        ticketPurchaseDeadline:
          type: date
        userId:
          type: number
        categories:
          type: array
          items:
            $ref: "#/components/schemas/Category"
        gallery:
          type: array
          items:
            $ref: "#/components/schemas/EventGallery"
        user:
          $ref: "#/components/schemas/User"

    EventGallery:
      type: object
      properties:
        type:
          type: string
        url:
          type: string
        name:
          type: string
        eventId:
          type: number
    
    Ticket: 
      type: object
      properties:
        type:
          type: string
        description:
          type: string
        price: 
          type: number
        totalNumber:
          type: number
        totalSold:
          type: number
    Wallet:
      type: object
      properties:
        id:
          type: number
        userId:
          type: number
        balance:
          type: number
    Bank:
      type: object
      properties:
        code:
          type: number
        name:
          type: string

  securitySchemes:
    bearer:
      type: http
      scheme: bearer
  

tags:
  - name: auth
  - name: user
  - name: "event category"
  - name: event
  - name: ticket
  - name: payment
  - name: wallet